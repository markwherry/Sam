#include "CsAudioDevice.h"
#include "CsAudioManager.h"

namespace Cs {

// --------------------------------------------------------------------------------------------------------------------------------------------
CsAudioDevice::CsAudioDevice(CsAudioManager *audioManager)
	: m_audioManager(audioManager)
	, m_inputBuffer(0)
	, m_outputBuffer(0)
	, m_lastBufferDuration(0.0f)
	, m_lastBufferUsage(0.0f)
	, m_bufferUsagePeak(0.0f)
{
}

// --------------------------------------------------------------------------------------------------------------------------------------------
AStatus CsAudioDevice::init(void)
{
	buildDriverList();

	return AOk;
}

// --------------------------------------------------------------------------------------------------------------------------------------------
AStatus CsAudioDevice::exit(void)
{
	return AOk;
}

// --------------------------------------------------------------------------------------------------------------------------------------------
AStatus CsAudioDevice::open(AString driverName)
{
	//m_currentAudioDriverName = driverName;

	return AOk;
}

// --------------------------------------------------------------------------------------------------------------------------------------------
AStatus CsAudioDevice::close(void)
{
	//m_currentAudioDriverName = "";
	
	return AOk;
}

// --------------------------------------------------------------------------------------------------------------------------------------------
AStatus CsAudioDevice::start(void)
{
	setActive(true);

	return AOk;
}

// --------------------------------------------------------------------------------------------------------------------------------------------
AStatus CsAudioDevice::stop(void)
{
	setActive(false);

	return AOk;
}

// --------------------------------------------------------------------------------------------------------------------------------------------
void CsAudioDevice::updateAudioProcessConfiguration(void)
{
	CsAudioProcessInfo audioProcessInfo;
	audioProcessInfo.bufferSize = bufferSize();
	audioProcessInfo.sampleRate = sampleRate();
	m_audioManager->callback()->setAudioProcessConfiguration(audioProcessInfo, numInputs(), numOutputs());
}

// --------------------------------------------------------------------------------------------------------------------------------------------
// --------------------------------------------------------------------------------------------------------------------------------------------
// --------------------------------------------------------------------------------------------------------------------------------------------
// --------------------------------------------------------------------------------------------------------------------------------------------
// --------------------------------------------------------------------------------------------------------------------------------------------

}